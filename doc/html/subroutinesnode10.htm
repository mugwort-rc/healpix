<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">

<!--Converted with LaTeX2HTML 2002-2-1 (1.71)
original version by:  Nikos Drakos, CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>alm2map*</TITLE>
<META NAME="description" CONTENT="alm2map*">
<META NAME="keywords" CONTENT="subroutines">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">

<META NAME="Generator" CONTENT="LaTeX2HTML v2002-2-1">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="subroutines.css">

<LINK REL="next" HREF="subroutinesnode11.htm">
<LINK REL="previous" HREF="subroutinesnode9.htm">
<LINK REL="up" HREF="subroutines.htm">
<LINK REL="next" HREF="subroutinesnode11.htm">
</HEAD>

<BODY >

<DIV CLASS="navigation"><body text="#000000" bgcolor="#FFFFFA">
<!--Navigation Panel-->
<A NAME="tex2html325"
  HREF="subroutinesnode9.htm">
<IMG WIDTH="63" HEIGHT="24" ALIGN="BOTTOM" BORDER="0" ALT="previous" SRC="prev.png"></A> 
<A NAME="tex2html331"
  HREF="subroutines.htm">
<IMG WIDTH="26" HEIGHT="24" ALIGN="BOTTOM" BORDER="0" ALT="up" SRC="up.png"></A> 
<A NAME="tex2html335"
  HREF="subroutinesnode11.htm">
<IMG WIDTH="37" HEIGHT="24" ALIGN="BOTTOM" BORDER="0" ALT="next" SRC="next.png"></A> 
<A NAME="tex2html333"
  HREF="subroutinesnode1.htm">
<IMG WIDTH="65" HEIGHT="24" ALIGN="BOTTOM" BORDER="0" ALT="contents" SRC="contents.png"></A>  
<BR>
<B> Previous:</B> <A NAME="tex2html326"
  HREF="subroutinesnode9.htm">alm2cl*</A>

<B>Up:</B> <A NAME="tex2html332"
  HREF="subroutines.htm">Healpix/F90 subroutines</A>

<B> Next:</B> <A NAME="tex2html336"
  HREF="subroutinesnode11.htm">alm2map_der*</A>
<B> Top:</B> <a href="main.htm">Main Page</a></DIV>
<!--End of Navigation Panel-->

<H1><A NAME="SECTION000100000000000000000"></A>
<A NAME="sub:alm2map"></A>
<BR>
 
</H1>

<P>
<b><font size=+6><FONT COLOR="#CC0000">alm2map*</FONT></font></b><hr><H2>This routine is a wrapper to 10 other routines: alm2map_sc_X,
  alm2map_sc_pre_X, alm2map_pol_X, alm2map_pol_pre1_X,
  alm2map_pol_pre2_X, where X stands for either s or d. These routines
  synthesize a <b>HEALPix</b> <EM>RING ordered</EM> temperature map (and if specified, polarisation maps) 
from input <SPAN CLASS="MATH"><I>a</I><SUB><I>lm</I></SUB><SUP><I>T</I></SUP></SPAN> (and if specified <SPAN CLASS="MATH"><I>a</I><SUB><I>lm</I></SUB><SUP><I>E</I></SUP></SPAN> and <SPAN CLASS="MATH"><I>a</I><SUB><I>lm</I></SUB><SUP><I>B</I></SUP></SPAN>) values. 
The different routines are called dependent on what parameters are passed. 
Some routines synthesize maps with or without precomputed harmonics and some
  with or without polarisation. 
The routines accept both single and double precision arrays for alm_TGC and
  map_TQU. The precision of these arrays should match.</H2><br>Location in HEALPix directory tree: <b>
src/f90/mod/alm_tools.f90
</b>

<P>
<hr><h1>FORMAT </h1><blockquote><h2>call <FONT COLOR="#CC0000">alm2map*</FONT>(
nsmax, nlmax, nmmax, alm_TGC, map_TQU [, plm]
)</h2></blockquote>

<P>
<hr><H1>ARGUMENTS</H1>

<TABLE CELLPADDING=3 BORDER="1">
<TR><TH ALIGN="LEFT" VALIGN="TOP" WIDTH=200><SPAN  CLASS="textbf">name&nbsp;&amp;&nbsp;dimensionality</SPAN></TH>
<TH ALIGN="LEFT" VALIGN="TOP" WIDTH=25><SPAN  CLASS="textbf">kind</SPAN></TH>
<TH ALIGN="LEFT" VALIGN="TOP" WIDTH=50><SPAN  CLASS="textbf">in/out</SPAN></TH>
<TH ALIGN="LEFT" VALIGN="TOP" WIDTH=175><SPAN  CLASS="textbf">description</SPAN></TH>
</TR>
<TR><TD ALIGN="LEFT" VALIGN="TOP" WIDTH=200>&nbsp;</TD>
<TD ALIGN="LEFT" VALIGN="TOP" WIDTH=25>&nbsp;</TD>
<TD ALIGN="LEFT" VALIGN="TOP" WIDTH=50>&nbsp;</TD>
<TD ALIGN="LEFT" VALIGN="TOP" WIDTH=175>&nbsp;</TD>
</TR>
<TR><TD ALIGN="LEFT" VALIGN="TOP" WIDTH=200>
nsmax</TD>
<TD ALIGN="LEFT" VALIGN="TOP" WIDTH=25>I4B</TD>
<TD ALIGN="LEFT" VALIGN="TOP" WIDTH=50>IN</TD>
<TD ALIGN="LEFT" VALIGN="TOP" WIDTH=175>the <SPAN CLASS="MATH"><I>N</I><SUB><I>side</I></SUB></SPAN> value of the map to synthesize.</TD>
</TR>
<TR><TD ALIGN="LEFT" VALIGN="TOP" WIDTH=200>nlmax</TD>
<TD ALIGN="LEFT" VALIGN="TOP" WIDTH=25>I4B</TD>
<TD ALIGN="LEFT" VALIGN="TOP" WIDTH=50>IN</TD>
<TD ALIGN="LEFT" VALIGN="TOP" WIDTH=175>the maximum <SPAN CLASS="MATH"><I>l</I></SPAN> value used for the <SPAN CLASS="MATH"><I>a</I><SUB><I>lm</I></SUB></SPAN>.</TD>
</TR>
<TR><TD ALIGN="LEFT" VALIGN="TOP" WIDTH=200>nmmax</TD>
<TD ALIGN="LEFT" VALIGN="TOP" WIDTH=25>I4B</TD>
<TD ALIGN="LEFT" VALIGN="TOP" WIDTH=50>IN</TD>
<TD ALIGN="LEFT" VALIGN="TOP" WIDTH=175>the maximum <SPAN CLASS="MATH"><I>m</I></SPAN> value used for the <SPAN CLASS="MATH"><I>a</I><SUB><I>lm</I></SUB></SPAN>.</TD>
</TR>
<TR><TD ALIGN="LEFT" VALIGN="TOP" WIDTH=200>alm_TGC(1:p, 0:nlmax, 0:nmmax)</TD>
<TD ALIGN="LEFT" VALIGN="TOP" WIDTH=25>SPC or DPC</TD>
<TD ALIGN="LEFT" VALIGN="TOP" WIDTH=50>IN</TD>
<TD ALIGN="LEFT" VALIGN="TOP" WIDTH=175>The <SPAN CLASS="MATH"><I>a</I><SUB><I>lm</I></SUB></SPAN> values to make
                   the map from. <SPAN CLASS="MATH"><I>p</I></SPAN> is 3 or 1 depending on wether polarisation is
                   respectively included or not. In the former case, the first
                   index runs from 1 to 3 corresponding to (T,E,B).</TD>
</TR>
</TABLE>

<P>
<TABLE CELLPADDING=3 BORDER="1">
<TR><TD ALIGN="LEFT" VALIGN="TOP" WIDTH=200>map_TQU(0:12*nsmax**2-1)</TD>
<TD ALIGN="LEFT" VALIGN="TOP" WIDTH=25>SP or DP</TD>
<TD ALIGN="LEFT" VALIGN="TOP" WIDTH=50>OUT</TD>
<TD ALIGN="LEFT" VALIGN="TOP" WIDTH=175>if only a temperature map is
to be synthesized, the map-array should be passed with this rank.</TD>
</TR>
<TR><TD ALIGN="LEFT" VALIGN="TOP" WIDTH=200>map_TQU(0:12*nsmax**2-1, 1:3)</TD>
<TD ALIGN="LEFT" VALIGN="TOP" WIDTH=25>SP or DP</TD>
<TD ALIGN="LEFT" VALIGN="TOP" WIDTH=50>OUT</TD>
<TD ALIGN="LEFT" VALIGN="TOP" WIDTH=175>if both temperature an 
polarisation maps are to be synthesized, the map array should have this rank, 
where the second index is (1,2,3) corresponding to (T,Q,U).</TD>
</TR>
<TR><TD ALIGN="LEFT" VALIGN="TOP" WIDTH=200>plm(0:n_plm-1), OPTIONAL</TD>
<TD ALIGN="LEFT" VALIGN="TOP" WIDTH=25>DP</TD>
<TD ALIGN="LEFT" VALIGN="TOP" WIDTH=50>IN</TD>
<TD ALIGN="LEFT" VALIGN="TOP" WIDTH=175>If this optional matrix is passed with
this rank, precomputed <!-- MATH
 $P_{lm}(\theta)$
 -->
<SPAN CLASS="MATH"><IMG
 WIDTH="57" HEIGHT="37" ALIGN="MIDDLE" BORDER="0"
 SRC="subroutinesimg15.png"
 ALT="$P_{lm}(\theta)$"></SPAN> are used instead of recursion. (
n_plm = nsmax*(nmmax+1)*(2*nlmax-nmmax+2)</TD>
</TR>
<TR><TD ALIGN="LEFT" VALIGN="TOP" WIDTH=200>plm(0:n_plm-1,1:3), OPTIONAL</TD>
<TD ALIGN="LEFT" VALIGN="TOP" WIDTH=25>DP</TD>
<TD ALIGN="LEFT" VALIGN="TOP" WIDTH=50>IN</TD>
<TD ALIGN="LEFT" VALIGN="TOP" WIDTH=175>If this optional matrix is 
passed with this rank, precomputed <!-- MATH
 $P_{lm}(\theta)$
 -->
<SPAN CLASS="MATH"><IMG
 WIDTH="57" HEIGHT="37" ALIGN="MIDDLE" BORDER="0"
 SRC="subroutinesimg15.png"
 ALT="$P_{lm}(\theta)$"></SPAN> AND precomputed tensor
harmonics are used instead of recursion. (n_plm =
nsmax*(nmmax+1)*(2*nlmax-nmmax+2)</TD>
</TR>
</TABLE>

<P>
<HR><H1>EXAMPLE:</H1><tt><FONT SIZE=+1>
use healpix_types 
<BR>
use pix_tools, only : nside2npix 
<BR>
use alm_tools, only : alm2map 
<BR>
integer(I4B) :: nside, lmax, mmax, npix, n_plm
<BR>
real(SP), dimension(:,:), allocatable :: map 
<BR>
complex(SPC), dimension(:,:,:), allocatable :: alm 
<BR>
real(DP), dimension(:,:), allocatable :: plm 
<BR>...
<BR>
nside=256 ; lmax=512 ; mmax=lmax
<BR>
npix=nside2npix(nside)
<BR>
n_plm=nside*(mmax+1)*(2*lmax-mmax+2)
<BR>
allocate(alm(1:3,0:lmax,0:mmax))
<BR>
allocate(map(0:npix-1,1:3))
<BR>
allocate(plm(0:n_plm-1,1:3))
<BR>...
<BR>
call alm2map(nside, lmax, mmax, alm, map, plm)  
<BR></font></tt>
<BR><blockquote>
Make temperature and polarisation maps from the scalar and tensor <SPAN CLASS="MATH"><I>a</I><SUB><I>lm</I></SUB></SPAN>
passed in alm. The maps have <SPAN CLASS="MATH"><I>N</I><SUB><I>side</I></SUB></SPAN> of 256, and are constructed from
<SPAN CLASS="MATH"><I>a</I><SUB><I>lm</I></SUB></SPAN> values up to 512 in <SPAN CLASS="MATH"><I>l</I></SPAN> and <SPAN CLASS="MATH"><I>m</I></SPAN>. Since the optional plm array is
passed with both precomputed <!-- MATH
 $P_{lm}(\theta)$
 -->
<SPAN CLASS="MATH"><IMG
 WIDTH="57" HEIGHT="37" ALIGN="MIDDLE" BORDER="0"
 SRC="subroutinesimg15.png"
 ALT="$P_{lm}(\theta)$"></SPAN> AND tensor harmonics, there will
be no recursions in the routine and execution will be faster. 
</blockquote>

<P>
<hr><H1>MODULES & ROUTINES</H1><H2>This section lists the modules and routines used by <FONT COLOR="#CC0000">alm2map*</FONT>.</h2>
  <DL COMPACT><DT>
<B><A HREF="subroutinesnode86.htm#sub:ring_synthesis">ring_synthesis</A></B>
<DD>Performs FFT over <SPAN CLASS="MATH"><I>m</I></SPAN> for synthesis of the rings.
  <DT>
<B>compute_lam_mm, get_pixel_layout, </B>
<DD><DT>
<B>gen_lamfac,gen_mfac, gen_normpol, </B>
<DD><DT>
<B>gen_recfac, init_rescale, l_min_ylm</B>
<DD>Ancillary routines used
  for <SPAN CLASS="MATH"><I>Y</I><SUB><I>lm</I></SUB></SPAN> recursion
  <DT>
<B><SPAN  CLASS="textbf">misc_utils</SPAN></B>
<DD>module, containing:
  <DT>
<B>assert_alloc</B>
<DD>routine to print error message, when an array can not be
  allocated properly
  </DL>

<P>
<hr><H1>RELATED ROUTINES</H1><h3>This section lists the routines related to <b><FONT COLOR="#CC0000">alm2map*</FONT></b></h3>
<BR> 
  <DL COMPACT><DT>
<B><A HREF="subroutinesnode11.htm#sub:alm2map_der">alm2map_der</A></B>
<DD>routine generating a map and
   its derivatives from its <SPAN CLASS="MATH"><I>a</I><SUB><I>lm</I></SUB></SPAN>
   <DT>
<B><A HREF="subroutinesnode12.htm#sub:alm2map_spin">alm2map_spin</A></B>
<DD>routine generating maps of
arbitrary spin from their  <SPAN CLASS="MATH"><SUB><I>s</I></SUB><I>a</I><SUB><I>lm</I></SUB></SPAN>
  <DT>
<B>smoothing</B>
<DD>executable using <FONT COLOR="#CC0000">alm2map*</FONT> to smooth maps
  <DT>
<B>synfast</B>
<DD>executable using <FONT COLOR="#CC0000">alm2map*</FONT> to synthesize maps.
  <DT>
<B><A HREF="subroutinesnode43.htm#sub:map2alm">map2alm</A></B>
<DD>routine performing the inverse transform
  of <FONT COLOR="#CC0000">alm2map*</FONT>.
  <DT>
<B><A HREF="subroutinesnode25.htm#sub:create_alm">create_alm</A></B>
<DD>routine to generate randomly
  distributed <SPAN CLASS="MATH"><I>a</I><SUB><I>lm</I></SUB></SPAN> coefficients according to a given power spectrum
  <DT>
<B><A HREF="subroutinesnode66.htm#sub:pixel_window">pixel_window</A>,
<A HREF="subroutinesnode31.htm#sub:generate_beam">generate_beam</A></B>
<DD>return the <SPAN CLASS="MATH"><I>l</I></SPAN>-space <b>HEALPix</b> -pixel and beam window function respectively
  <DT>
<B><A HREF="subroutinesnode6.htm#sub:alter_alm">alter_alm</A></B>
<DD>modifies <SPAN CLASS="MATH"><I>a</I><SUB><I>lm</I></SUB></SPAN> to emulate effect
of real space filtering
  </DL>

<P>

<P>


<DIV CLASS="navigation"><HR>
<!--Navigation Panel-->
<A NAME="tex2html325"
  HREF="subroutinesnode9.htm">
<IMG WIDTH="63" HEIGHT="24" ALIGN="BOTTOM" BORDER="0" ALT="previous" SRC="prev.png"></A> 
<A NAME="tex2html331"
  HREF="subroutines.htm">
<IMG WIDTH="26" HEIGHT="24" ALIGN="BOTTOM" BORDER="0" ALT="up" SRC="up.png"></A> 
<A NAME="tex2html335"
  HREF="subroutinesnode11.htm">
<IMG WIDTH="37" HEIGHT="24" ALIGN="BOTTOM" BORDER="0" ALT="next" SRC="next.png"></A> 
<A NAME="tex2html333"
  HREF="subroutinesnode1.htm">
<IMG WIDTH="65" HEIGHT="24" ALIGN="BOTTOM" BORDER="0" ALT="contents" SRC="contents.png"></A>  
<BR>
<B> Previous:</B> <A NAME="tex2html326"
  HREF="subroutinesnode9.htm">alm2cl*</A>

<B>Up:</B> <A NAME="tex2html332"
  HREF="subroutines.htm">Healpix/F90 subroutines</A>

<B> Next:</B> <A NAME="tex2html336"
  HREF="subroutinesnode11.htm">alm2map_der*</A>
<B> Top:</B> <a href="main.htm">Main Page</a></DIV>
<!--End of Navigation Panel-->
<ADDRESS>
Eric Hivon
2009-07-31
</ADDRESS>
</BODY>
</HTML>
